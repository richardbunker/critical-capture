generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique(map: "username") @db.VarChar(255)
  password String    @db.VarChar(255)
  Comment  Comment[]
  Post     Post[]
}

model Post {
  id            Int           @id @default(autoincrement())
  caption       String        @db.VarChar(255)
  focal_length  String        @db.VarChar(255)
  shutter_speed String        @db.VarChar(255)
  f_stop        String        @db.VarChar(255)
  iso           String        @db.VarChar(255)
  createdAt     DateTime      @default(now()) @db.Timestamp(0)
  image         String
  userId        Int
  comments      Comment[]
  user          User          @relation(fields: [userId], references: [id])
  tags          TagsOnPosts[]

  @@index([userId], map: "userId")
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String    @db.LongText()
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  userId    Int
  postId    Int
  parent    Comment?  @relation("CommentReply", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId  Int?
  replies   Comment[] @relation("CommentReply")
  user      User      @relation(fields: [userId], references: [id])
  post      Post      @relation(fields: [postId], references: [id])

  @@index([userId], map: "Comment_userId_fkey")
  @@index([postId], map: "Comment_postId_fkey")
  @@index([parentId])
}

model Tag {
  id    Int           @id @default(autoincrement())
  name  String        @db.VarChar(255)
  posts TagsOnPosts[]
}

model TagsOnPosts {
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([postId, tagId])
  @@index([postId])
  @@index([tagId])
}
